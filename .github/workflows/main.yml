# This is a basic workflow to help you get started with Actions

name: Keep Supabase Alive

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  schedule:
    - cron: '16 14 */5 * *'




  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  keep-alive:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Keep Supabase alive
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: |
          current_timestamp=$(date +%s)
          response=$(curl -s -X GET \
            "${{ secrets.SUPABASE_URL }}/rest/v1/days?select=count(*)&date=lt.$current_timestamp" \
            -H "apikey: ${{ secrets.SUPABASE_KEY }}" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_KEY }}"
          )

          if [[ $? -eq 0 ]]; then
            echo "Llamada a Supabase exitosa (conteo de filas con filtro)."
            echo "Respuesta:"
            echo "$response"

            # Extraer el conteo con sed (menos robusto)
            count=$(echo "$response" | sed -E 's/.*"count":([0-9]+).*/\1/')

            if [[ -n "$count" ]]; then
              echo "Total de filas en la tabla days donde date < $current_timestamp: $count"
            else
              echo "No se pudo extraer el conteo con sed. Revisar la respuesta de Supabase."
              echo "Respuesta completa: $response"
            fi

          else
            echo "Error en la llamada a Supabase:"
            echo "$response"
            exit 1
          fi
        

